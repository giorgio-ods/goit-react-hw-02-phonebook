{"version":3,"sources":["Components/Input/Input.js","Components/ContactList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["AddContacts","state","name","phone","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","clearInput","this","type","pattern","title","required","onChange","Component","ContactsList","contacts","map","id","onClick","Filter","App","filter","addNewContact","find","contact","toLowerCase","alert","prevState","nanoid","deleteContact","filterContacts","modified","includes","refreshFilter","evt","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe01fc7d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddContacts extends Component {\n  state = {\n    name: \"\",\n    phone: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.clearInput();\n  };\n\n  clearInput = () => {\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Enter Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Enter Phone Number\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={this.state.phone}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    );\n  }\n}\n\nAddContacts.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactsList({ contacts, onChange }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, phone }) => (\n        <li key={id}>\n          <div>\n            <p>{`${name}:${phone}`}</p>\n            <button type=\"button\" onClick={() => onChange(id)}>\n              Remove\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  onChange: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <div>\n      <label>\n        Search\n        <input type=\"text\" value={value} onChange={onChange}></input>\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from \"react\";\nimport Input from \"./Components/Input/Input\";\nimport ContactsList from \"./Components/ContactList/ContactsList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { nanoid } from \"nanoid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = ({ name, phone }) => {\n    const checkName = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkName) {\n      alert(\n        \"This name has already been added to your contact list. Please check it \"\n      );\n    } else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { id: nanoid(), name, phone }],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const modified = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(modified)\n    );\n  };\n\n  refreshFilter = (evt) => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    const { filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Input onSubmit={this.addNewContact} />\n        <h3>Contacts list</h3>\n        <Filter value={filter} onChange={this.refreshFilter} />\n        <ContactsList\n          contacts={filteredContacts}\n          onChange={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}