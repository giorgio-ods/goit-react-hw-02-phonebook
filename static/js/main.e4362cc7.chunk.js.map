{"version":3,"sources":["Components/Input/Input.js","Components/Input/ContactsList.js","Components/Input/Filter.js","App.js","index.js"],"names":["AddContacts","state","name","phone","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","clearInput","this","type","pattern","title","required","onChange","Component","ContactsList","contacts","map","id","Filter","App","filter","addNewContact","find","contact","toLowerCase","alert","prevState","nanoid","deleteContact","filterContacts","modified","includes","refreshFilter","evt","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAIqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,MAAO,I,EAGTC,aAAe,SAAAC,GACb,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAgBN,EAAOK,K,EAGzBE,aAAe,SAAAJ,GACbA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,c,EAGPA,WAAa,WACX,EAAKL,SAAS,CAACN,KAAM,GAAIC,MAAO,M,4CAGlC,WACE,OACE,uBAAMS,SAAUE,KAAKL,aAArB,UACE,+CAEF,uBACEM,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACFC,UAAQ,EACRX,MAAOO,KAAKb,MAAMC,KAClBiB,SAAUL,KAAKV,kBAGnB,uDAEE,uBACFW,KAAK,MACLb,KAAK,QACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACJX,MAAOO,KAAKb,MAAME,MAClBgB,SAAUL,KAAKV,kBAInB,wBAAQW,KAAK,SAAb,gC,GAjDiCK,aCD1B,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,SAClC,OACA,6BACKA,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACV,6BACI,8BAAK,sCAAOD,EAAP,YAAeC,QADfqB,QCLN,SAASC,EAAT,GAAsC,IAApBlB,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,SACpC,OACI,8BACI,2CAEI,uBAAOJ,KAAK,OAAOR,MAAOA,EAAOY,SAAUA,S,YCArDO,E,4MACJzB,MAAQ,CACNqB,SAAU,CACR,CAAEE,GAAI,OAAQtB,KAAM,gBAAiBC,MAAO,aAC5C,CAAEqB,GAAI,OAAQtB,KAAM,iBAAkBC,MAAO,aAC7C,CAAEqB,GAAI,OAAQtB,KAAM,gBAAiBC,MAAO,aAC5C,CAAEqB,GAAI,OAAQtB,KAAM,iBAAkBC,MAAO,cAG/CwB,OAAQ,I,EAGVC,cAAgB,YAAsB,IAAnB1B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACL,EAAKF,MAAMqB,SAASO,MAAK,SAACC,GAAD,OAAaA,EAAQ5B,KAAK6B,gBAAkB7B,EAAK6B,iBAG1FC,MAAM,2EAGN,EAAKxB,UAAS,SAACyB,GAAD,MAAgB,CAC5BX,SAAS,GAAD,mBAAMW,EAAUX,UAAhB,CAA0B,CAAEE,GAAIU,cAAUhC,OAAMC,gB,EAK9DgC,cAAgB,SAACX,GACf,EAAKhB,UAAS,SAACyB,GAAD,MAAgB,CAC5BX,SAAUW,EAAUX,SAASK,QAAO,SAACG,GAAD,OAAaA,EAAQN,KAAOA,U,EAIpEY,eAAiB,WACb,MAA6B,EAAKnC,MAA1B0B,EAAR,EAAQA,OAAQL,EAAhB,EAAgBA,SACVe,EAAWV,EAAOI,cACxB,OAAOT,EAASK,QAAO,SAAAG,GAAO,OAAIA,EAAQ5B,KAAK6B,cAAcO,SAASD,O,EAGxEE,cAAgB,SAACC,GACf,EAAKhC,SAAS,CAAEmB,OAAQa,EAAIlC,cAAcC,S,4CAI9C,WACE,IAAMkC,EAAmB3B,KAAKsB,iBACtBT,EAAWb,KAAKb,MAAhB0B,OAER,OAAO,gCACL,2CACA,cAAC,EAAD,CAAOf,SAAUE,KAAKc,gBACtB,+CACA,cAACH,EAAD,CAAQlB,MAAOoB,EAAQR,SAAUL,KAAKyB,gBACtC,cAAClB,EAAD,CAAcC,SAAUmB,EAAkBtB,SAAUL,KAAKqB,uB,GAnD7Cf,aA0DHM,IC3DfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4362cc7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n  }\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({[name]: value})\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.clearInput();\r\n  }\r\n\r\n  clearInput = () => {\r\n    this.setState({name: \"\", phone: \"\"})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n      Enter Name\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n      />\r\n        </label>\r\n        <label>\r\n          Enter Phone Number\r\n          <input\r\n        type=\"tel\"\r\n        name=\"phone\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n            value={this.state.phone}\r\n            onChange={this.handleChange}\r\n\r\n/>\r\n      </label>\r\n        <button type='submit'>Add Contact</button>\r\n  </form>\r\n    )}\r\n}\r\n\r\nAddContacts.propTypes = {\r\n    onSubmit: PropTypes.func\r\n}","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function ContactsList({contacts}) {\r\n    return(\r\n    <ul>\r\n        {contacts.map(({ id, name, phone }) => \r\n            <li key={id}>\r\n                <div><p>{`${name}:${phone}` }</p></div>\r\n            </li>)} \r\n    </ul>\r\n    )}\r\n\r\n// ContactsList.propTypes = {\r\n    \r\n// }","import PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n    return (\r\n        <div>\r\n            <label>\r\n                Search\r\n                <input type=\"text\" value={value} onChange={onChange}></input>\r\n            </label>\r\n        </div>\r\n    )\r\n} \r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func\r\n}","import React, { Component } from \"react\";\nimport Input from './Components/Input/Input'\nimport ContactsList from \"./Components/Input/ContactsList\";\nimport Filter from \"./Components/Input/Filter\";\nimport { nanoid } from \"nanoid\";\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\n    \n    ],\n    filter: \"\",\n  }\n\n  addNewContact = ({ name, phone }) => {\n    const checkName = this.state.contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\n\n    if (checkName) {\n      alert(\"This name has already been added to your contact list. Please check it \")\n    }\n    else {\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, { id: nanoid(), name, phone }]\n      }))\n    }\n  }\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }))\n  };\n\n  filterContacts = () => {\n      const { filter, contacts } = this.state;\n      const modified = filter.toLowerCase();\n      return contacts.filter(contact => contact.name.toLowerCase().includes(modified))\n    }\n\n    refreshFilter = (evt) => {\n      this.setState({ filter: evt.currentTarget.value })\n    }\n  \n\n  render() {  \n    const filteredContacts = this.filterContacts();\n    const { filter } = this.state;\n\n    return <div>\n      <h1>Phonebook</h1>\n      <Input onSubmit={this.addNewContact}/>\n      <h3>Contacts list</h3>\n      <Filter value={filter} onChange={this.refreshFilter}/>\n      <ContactsList contacts={filteredContacts} onChange={this.deleteContact} />\n    </div>\n    \n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}